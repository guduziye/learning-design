

备忘录模式：在不破坏对象的封装性的前提下，在对象之外捕获并保存该对象内部的状态以便日后对象使用或是对象恢复到以前的某个状态。

迭代器模式：在不暴露对象内部结构的同时，可以顺序的访问聚合对象的内部元素。

解释器模式：对于一种语言，给出其文法表示形式，并定义一种解释器，通过使用这中解释器来解释语言中定义的句子。

链模式：通过在对象方法中将当前对象返回，实现对同一个对象多个方法的链式调用。从而简化对该对象的多个方法的多次调用时，对该对象的多次引用。

委托模式：多个对象接收并处理统一请求，他们将请求委托给另一个对象统一处理请求。

数据访问对象模式（Data access object,DAO）：抽象和封装对数据源的访问与存储，DAO通过对数据源链接的管理方便对数据的访问与存储。

节流模式（throttler）：对重复的业务逻辑进行节流控制，执行最后一次操作并取消其他操作，以提高性能。